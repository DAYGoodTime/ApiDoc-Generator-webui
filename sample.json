{
  "methods": [
    {
    "methodName": "createSubPost",
    "modifier": "@Operation(summary = \"创建评论接口\",description = \"传入指定参数创建对该贴的评论\",\n            requestBody = @io.swagger.v3.oas.annotations.parameters.RequestBody(\n                    required = true,\n                    content = @Content(\n                            mediaType = \"application/json\",\n                            schema = @Schema(implementation = createSubPost.class)\n                    )\n\n            ),\n            responses = {\n                    @ApiResponse(responseCode = \"200\",description = \"操作成功,并返回数据(如果有)\",content = @Content(mediaType = \"application/json\",schema = @Schema(implementation = R.class))),\n                    @ApiResponse(responseCode = \"100\",description = \"操作失败\",content = @Content(mediaType = \"application/json\",schema = @Schema(implementation = R.class)))\n            }\n    )\n    @PostMapping(\"/createSubPost\")\n    public",
    "parameterList": [{
      "parameterName": "request",
      "AnnotationList": ["Parameter", "RequestBody"],
      "Type": "JSONObject"
    }],
    "returnType": "R"
  },
    {
    "methodName": "getPost",
    "modifier": "@Operation(summary = \"查看帖子详情\",\n            description = \"查看帖子详情\",\n            responses = {\n                    @ApiResponse(responseCode = \"200\",description = \"操作成功,并返回数据\",\n                            content = @Content(mediaType = \"application/json\",schema = @Schema(implementation = getPostResp.class))),\n                    @ApiResponse(responseCode = \"100\",description = \"操作失败\",\n                            content = @Content(mediaType = \"application/json\",schema = @Schema(implementation = R_Fail.class)))\n            }\n    )\n    @GetMapping(path = \"/getPost/{pid}\")\n    public",
    "parameterList": [{
      "parameterName": "post_id",
      "AnnotationList": ["Parameter", "PathVariable"],
      "Type": "String"
    }, {
      "parameterName": "user_id",
      "AnnotationList": ["Parameter"],
      "Type": "String"
    }],
    "returnType": "R"
  },
    {
    "methodName": "getLocation",
    "modifier": "@Operation(summary = \"地区获取接口\",description = \"访问该接口，返回当前访问用户的地区信息\")\n    @GetMapping(\"/toGetIpLocation\")\n    public",
    "parameterList": [{
      "parameterName": "request",
      "AnnotationList": [],
      "Type": "HttpServletRequest"
    }],
    "returnType": "R"
  },
    {
    "methodName": "createAnPost",
    "modifier": "@Operation(summary = \"上传帖子\",\n            description = \"创建帖子,注意,你需要传递一个表单数据\",\n            requestBody = @io.swagger.v3.oas.annotations.parameters.RequestBody(description = \"表单数据\",content = @Content(mediaType = \"multipart/form-data\",\n                    schema = @Schema(implementation = createAnPostReq.class)))\n            ,\n            responses = {\n                    @ApiResponse(responseCode = \"200\",description = \"操作成功\",content = @Content(mediaType = \"application/json\",schema = @Schema(implementation = R_Success.class))),\n                    @ApiResponse(responseCode = \"100\",description = \"操作失败\",content = @Content(mediaType = \"application/json\",schema = @Schema(implementation = R_Fail.class)))\n            }\n    )\n    @PostMapping(path = \"/createPost\",produces = \"application/json\")\n    public",
    "parameterList": [{
      "parameterName": "pictures",
      "AnnotationList": ["Parameter"],
      "Type": "MultipartFile[]"
    }, {
      "parameterName": "title",
      "AnnotationList": ["Parameter"],
      "Type": "String"
    }, {
      "parameterName": "context",
      "AnnotationList": ["Parameter"],
      "Type": "String"
    }, {
      "parameterName": "uid",
      "AnnotationList": ["Parameter"],
      "Type": "String"
    }],
    "returnType": "R"
  },
    {
    "methodName": "getAllPost",
    "modifier": "@Operation(summary = \"查询所有帖子\",\n            description = \"查询所有帖子(TODO:未来可能会做成分页，目前只会显示前5个)\",\n            parameters = {\n                    @Parameter(name = \"uid\", description = \"用户id\", required = true,in = ParameterIn.PATH)\n            },\n            responses = {\n                    @ApiResponse(responseCode = \"200\",description = \"操作成功\",content = @Content(mediaType = \"application/json\",schema = @Schema(implementation = getAllPostResp.class))),\n                    @ApiResponse(responseCode = \"100\",description = \"操作失败\",content = @Content(mediaType = \"application/json\",schema = @Schema(implementation = R_Fail.class)))\n            }\n    )\n    @GetMapping(path = \"/getAllPost/{uid}\")\n    public",
    "parameterList": [{
      "parameterName": "uid",
      "AnnotationList": ["PathVariable"],
      "Type": "String"
    }],
    "returnType": "R"
  }]
}
